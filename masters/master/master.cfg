# -*- python -*-
# ex: set syntax=python:

c = BuildmasterConfig = {}

c['title'] = "Freifunk"
c['titleURL'] = "http://berlin.freifunk.net"
c['buildbotURL'] = "http://firmware.berlin.freifunk.net:8010/"
c['db_url'] = "sqlite:///state.sqlite"

# SLAVES
from slaves import build_slaves
c['slaves'] = build_slaves
c['slavePortnum'] = 9989

# CHANGESOURCES
from buildbot.changes.gitpoller import GitPoller
c['change_source'] = GitPoller(
    repourl='git://github.com/freifunk-berlin/firmware.git',
    workdir='gitpoller-workdir',
    branch='master',
    pollinterval=60
)

# SCHEDULERS
from buildbot.schedulers.basic import SingleBranchScheduler
from buildbot.changes import filter
from buildbot.schedulers.timed import Nightly

builder_names = ["ar71xx", "ar71xx_mikrotik", "mpc85xx"]

c['schedulers'] = []
c['schedulers'].append(
    SingleBranchScheduler(
        name="fullmake",
        change_filter=filter.ChangeFilter(branch='master'),
        treeStableTimer=10,
        builderNames=builder_names
    )
)

c['schedulers'].append(Nightly(
    name="nightly",
    branch="master",
    builderNames=builder_names
    hour=5,
    minute=23
    )
)

# BUILDERS
from buildbot.process.factory import BuildFactory
from buildbot.config import BuilderConfig
from buildbot.steps.source import Git
from buildbot.steps.shell import ShellCommand
from buildbot.steps.transfer import DirectoryUpload
from buildbot.steps.master import MasterShellCommand
from buildbot.process.properties import WithProperties
from buildbot.steps.slave import RemoveDirectory

cmd_ls = ShellCommand(command=["ls", "-al"], workdir="")
cmd_pwd = ShellCommand(command=["pwd"], workdir="")
cmd_cleanDir = ShellCommand(command=["rm", "-rf"], workdir="")

cmd_checkoutSource = Git(
    repourl='git://github.com/freifunk-berlin/firmware.git',
    branch="master",
    workdir="build/firmware-berlin",
    mode='clobber'
    )

make_target = WithProperties("TARGET=%(buildername)s")

cmd_make = ShellCommand(
    command=[
        "make",
        "-j2",
        make_target
    ],
    workdir="build/firmware-berlin",
    haltOnFailure=True
    )

upload_directory = WithProperties(
    "/usr/local/src/www/htdocs/buildbot/%(buildername)s/%(buildnumber)s/"
    )

cmd_mastermkdir = MasterShellCommand(
    command=[
        "mkdir",
        "-p",
        upload_directory
    ])

slave_src_directory = WithProperties(
    "firmware-berlin/firmwares/%(buildername)%s/"
)

cmd_uploadPackages = DirectoryUpload(
    slavesrc=slave_src_directory,
    masterdest=upload_directory
    )

cmd_masterchmod = MasterShellCommand(
    command=[
        "chmod",
        "-R",
        "o+rX",
        upload_directory
    ])

cmd_cleanup = RemoveDirectory(
    dir="build/firmware-berlin",
    alwaysRun=True
    )

factory = BuildFactory()
factory.addStep(cmd_checkoutSource)
factory.addStep(cmd_make)
factory.addStep(cmd_mastermkdir)
factory.addStep(cmd_uploadPackages)
factory.addStep(cmd_masterchmod)
factory.addStep(cmd_cleanup)

slavenames = [
    "local", "Dreilinden", "wombat", "freifunk_bauer", "wg1337", "ansi-s4y",
    "ansi-home"
    ]


def create_builder_config(builder_name):
    return BuilderConfig(
        name=builder_name,
        slavenames=slavenames,
        factory=factory
    )

c['builders'] = map(create_builder_config, builder_names)

# STATUS TARGETS
from buildbot.status import html
from buildbot.status.web import authz
from buildbot.status import words
from buildbot.status.mail import MailNotifier

c['status'] = []
c['status'].append(html.WebStatus(
    http_port=8010,
    authz=authz.Authz(
        gracefulShutdown=False,
        forceBuild=True,
        forceAllBuilds=False,
        pingBuilder=False,
        stopBuild=False,
        stopAllBuilds=False,
        cancelPendingBuild=False,
        )
    )
    )
c['status'].append(words.IRC(
    "irc.freenode.net",
    "freifunkbuildbot",
    channels=["#freifunk-berlin"],
    notify_events={
        'exception':        1,
        'successToFailure': 1,
        'failureToSuccess': 1,
        }
    )
    )
