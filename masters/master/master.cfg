# -*- python -*-
# ex: set syntax=python:

c = BuildmasterConfig = {}

c['title']        = "Freifunk"
c['titleURL']     = "http://berlin.freifunk.net"
c['buildbotURL']  = "http://firmware.berlin.freifunk.net:8010/"
c['db_url']       = "sqlite:///state.sqlite"

####### SLAVES
from slaves import build_slaves
c['slaves']       = build_slaves
c['slavePortnum'] = 9989

####### CHANGESOURCES
from buildbot.changes.gitpoller import GitPoller
c['change_source'] = GitPoller(
                               repourl      = 'git://github.com/freifunk-berlin/firmware.git',
                               workdir      = 'gitpoller-workdir',
                               branch       = 'master',
                               pollinterval = 60
                              )

####### SCHEDULERS
from buildbot.schedulers.basic import SingleBranchScheduler
from buildbot.changes          import filter
from buildbot.schedulers.timed import Nightly

c['schedulers'] = []
c['schedulers'].append(SingleBranchScheduler(
                                             name            = "fullmake",
                                             change_filter   = filter.ChangeFilter(branch='master'),
                                             treeStableTimer = 10,
                                             builderNames    = ["ar71xx", "ar71xx_mikrotik", "mpc85xx"]
                                            )
                      )

c['schedulers'].append(Nightly(
	                        name               = "nightly",
                                branch             = "master",
                                builderNames       = ["ar71xx", "ar71xx_mikrotik", "mpc85xx"],
                                hour               = 5,
                                minute             = 23
                               )
                      )

####### BUILDERS
from buildbot.process.factory    import BuildFactory
from buildbot.config             import BuilderConfig
from buildbot.steps.source       import Git
from buildbot.steps.shell        import ShellCommand
from buildbot.steps.transfer     import DirectoryUpload
from buildbot.steps.master       import MasterShellCommand
from buildbot.process.properties import WithProperties
from buildbot.steps.slave        import RemoveDirectory

cmd_ls       = ShellCommand(command = ["ls", "-al"], workdir = "")
cmd_pwd      = ShellCommand(command = ["pwd"],       workdir = "")
cmd_cleanDir = ShellCommand(command = ["rm", "-rf"], workdir = "")

cmd_checkoutSource = Git(repourl = 'git://github.com/freifunk-berlin/firmware.git', 
                         branch  = "master", 
                         workdir = "build/firmware-berlin", 
                         mode    = 'clobber'
                        )

cmd_make_ar71xx = ShellCommand(command       = ["make", 
                                                "-j2", 
                                                 "TARGET=ar71xx"
                                               ], 
                               workdir       = "build/firmware-berlin", 
                               haltOnFailure = True
                              )

cmd_make_ar71xx_mikrotik = ShellCommand(command       = ["make", 
                                                        "-j2",
                                                        "TARGET=ar71xx_mikrotik"
                                                       ],
                                       workdir       = "build/firmware-berlin", 
                                       haltOnFailure = True
                                      )

cmd_make_mpc85xx = ShellCommand(command       = ["make", 
                                                 "-j2",
                                                 "TARGET=mpc85xx"
                                                ],
                                workdir       = "build/firmware-berlin", 
                                haltOnFailure = True
                               )

cmd_mastermkdir = MasterShellCommand(command = ["mkdir", 
                                                "-p", 
                                                WithProperties("/usr/local/src/www/web2py/applications/meshkit/static/builds/%(buildername)s/%(buildnumber)s")
                                               ]
                                    )

cmd_uploadPackages_ar71xx = DirectoryUpload(slavesrc   = "firmware-berlin/firmwares/ar71xx/", 
                                            masterdest = WithProperties("/usr/local/src/www/web2py/applications/meshkit/static/builds/%(buildername)s/%(buildnumber)s/")
                                           )

cmd_uploadPackages_ar71xx_mikrotik = DirectoryUpload(slavesrc   = "firmware-berlin/firmwares/ar71xx_mikrotik/", 
                                                     masterdest = WithProperties("/usr/local/src/www/web2py/applications/meshkit/static/builds/%(buildername)s/%(buildnumber)s/")
                                                    )

cmd_uploadPackages_mpc85xx = DirectoryUpload(slavesrc   = "firmware-berlin/firmwares/mpc85xx/", 
                                             masterdest = WithProperties("/usr/local/src/www/web2py/applications/meshkit/static/builds/%(buildername)s/%(buildnumber)s/")
                                            )

cmd_masterchmod = MasterShellCommand(command= ["chmod", 
                                               "555", 
                                               WithProperties("/usr/local/src/www/web2py/applications/meshkit/static/builds/%(buildername)s/%(buildnumber)s")
                                              ]
                                    )

cmd_cleanup = RemoveDirectory(dir       = "build/firmware-berlin",
                              alwaysRun = True
                             )

factory_ar71xx = BuildFactory()
factory_ar71xx.addStep(cmd_checkoutSource       )
factory_ar71xx.addStep(cmd_make_ar71xx          )
factory_ar71xx.addStep(cmd_mastermkdir          )
factory_ar71xx.addStep(cmd_uploadPackages_ar71xx)
factory_ar71xx.addStep(cmd_masterchmod          )
factory_ar71xx.addStep(cmd_cleanup              )

factory_ar71xx_mikrotik = BuildFactory()
factory_ar71xx_mikrotik.addStep(cmd_checkoutSource                 )
factory_ar71xx_mikrotik.addStep(cmd_make_ar71xx_mikrotik           )
factory_ar71xx_mikrotik.addStep(cmd_mastermkdir                    )
factory_ar71xx_mikrotik.addStep(cmd_uploadPackages_ar71xx_mikrotik )
factory_ar71xx_mikrotik.addStep(cmd_masterchmod                    )
factory_ar71xx_mikrotik.addStep(cmd_cleanup                        )

factory_mpc85xx = BuildFactory()
factory_mpc85xx.addStep(cmd_checkoutSource         )
factory_mpc85xx.addStep(cmd_make_mpc85xx           )
factory_mpc85xx.addStep(cmd_mastermkdir            )
factory_mpc85xx.addStep(cmd_uploadPackages_mpc85xx )
factory_mpc85xx.addStep(cmd_masterchmod            )
factory_mpc85xx.addStep(cmd_cleanup                )

c['builders'] = []
c['builders'].append(BuilderConfig(
                                   name       = "ar71xx",
                                   slavenames = ["local", "Dreilinden", "wombat", "freifunk_bauer", "wg1337", "ansi-s4y", "ansi-home"],
                                   factory    = factory_ar71xx
                                  )
                    )
c['builders'].append(BuilderConfig(
                                   name       = "ar71xx_mikrotik",
                                   slavenames = ["local", "Dreilinden", "wombat", "freifunk_bauer", "wg1337", "ansi-s4y", "ansi-home"],
                                   factory    = factory_ar71xx_mikrotik
                                  )
                    )
c['builders'].append(BuilderConfig(
                                   name       = "mpc85xx",
                                   slavenames = ["local", "Dreilinden", "wombat", "freifunk_bauer", "wg1337", "ansi-s4y", "ansi-home"],
                                   factory    = factory_mpc85xx
                                  )
                    )


####### STATUS TARGETS
from buildbot.status      import html
from buildbot.status.web  import authz
from buildbot.status      import words
from buildbot.status.mail import MailNotifier

c['status'] = []
c['status'].append(html.WebStatus(
                                  http_port = 8010, 
                                  authz     = authz.Authz(
                                                          gracefulShutdown   = False,
                                                          forceBuild         = True,
                                                          forceAllBuilds     = False,
                                                          pingBuilder        = False,
                                                          stopBuild          = False,
                                                          stopAllBuilds      = False,
                                                          cancelPendingBuild = False,
                                                         )
                                 )
                  )
c['status'].append(words.IRC(
                             "irc.freenode.net", 
                             "freifunkbuildbot",
                             channels      = ["#freifunk-berlin"],
                             notify_events = {
                                              'exception':        1,
                                              'successToFailure': 1,
                                              'failureToSuccess': 1,
                                             }
                            )
                  )
#c['status'].append(MailNotifier(
#                                fromaddr = "buildbot@berlin.freifunk.net"
#                               )
#                  )

